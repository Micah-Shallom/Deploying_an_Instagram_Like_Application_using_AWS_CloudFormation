Description: >
  Micah Shallom Bawa
  Project 3 Network Stack
  Deploying A High Availability Web Application For an Instagram-Like Application "Udagram"
##########################################################################################
Parameters:
  ProjectName:
    Type: String
    Description: Project Name Description
  VPCCIDR:
    Type: String
    Description: CIDR block containing IP address ranges for our project virtual isolated network
    Default: 10.0.0.0/16
  PublicSubnet1CIDR:
    Description: The Ip address range of all servers in public subnet 
    Type: String
    Default: 10.0.0.0/24
  PublicSubnet2CIDR:
    Description: The Ip address range of all servers in public subnet 
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnet1CIDR:
    Description: The Ip address range of all servers in private subnet 1
    Type: String
    Default: 10.0.2.0/24
  PrivateSubnet2CIDR:
    Description: The Ip address range of all servers in private subnet 2
    Type: String
    Default: 10.0.3.0/24

Resources:
  VPC: 
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCIDR
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName} VPC
#########################################################################################
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: Public Subnet present in AZ1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: Public Subnet present in AZ2
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: Private Subnet present in AZ1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: Private Subnet present in AZ2
##########################################################################################
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: Internet Gateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  EIP1:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
  NATGateway1:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId:
         Fn::GetAtt:
         - EIP1
         - AllocationId
      SubnetId:
         Ref: PublicSubnet1
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName} NAT 1
  EIP2:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
  NATGateway2:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId:
         Fn::GetAtt:
         - EIP2
         - AllocationId
      SubnetId:
         Ref: PublicSubnet2
      Tags:
      - Key: Name
        Value: !Sub ${ProjectName} NAT 2

##########################################################################################

#Public Subnet Routing
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: Public Route Table 1  
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
       RouteTableId:
         Ref: PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

#Private Subnet 1 Routing
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: Private Route Table 1  
  PrivateRoute1:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
       RouteTableId:
         Ref: PrivateRouteTable1
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId:
         Ref: NATGateway1 
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1
      
#Private Subnet 2 Routing
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: Private Route Table 2
  PrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
       RouteTableId:
          Ref: PrivateRouteTable2
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId:
          Ref: NATGateway2
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2
##############################################################################################
Outputs:
  VPC:
    Description: The ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${ProjectName}-VPCID
  PublicSubnets:
    Description: The Id of the Public Subnet
    Value: !Join [',', [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub ${ProjectName}-PUB-SUBNETS
  PublicSubnet1:
    Description: The Id of the public subnet in AZ1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${ProjectName}-PUB-SUBNET1
  PublicSubnet2:
    Description: The Id of the public subnet in AZ2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${ProjectName}-PUB-SUBNET2
  PrivateSubnets:
    Description: The ID of the VPC
    Value: !Join [',' , [!Ref PrivateSubnet1 , !Ref PrivateSubnet2]]
    Export:
      Name: !Sub "${ProjectName}-PRIV-SUBNETS"
  PrivateSubnet1:
    Description: The ID of the VPC
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${ProjectName}-PRIV-SUBNET1"
  PrivateSubnet2:
    Description: The ID of the VPC
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${ProjectName}-PRIV-SUBNET2"


